package GUI;

import model.PathResult;

import java.io.IOException;
import java.io.PrintWriter;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

//Class used to save result paths generated by heuristics to the file
public class ResultsPrinter {
    private static PrintWriter writer;

    public static void printToFile(String heuristic, PathResult[] pathResults, String resDescription) {
        Charset CHARSET = StandardCharsets.UTF_8;
        // used to produce unique name for each file
        String timeStamp = new SimpleDateFormat("dd-MM-yyyy HH.mm.ss").format(new Date());
        String filename = heuristic + " " + timeStamp + ".txt";
        Path RES_FILE = Paths.get(filename);
        try {
            writer = new PrintWriter(Files.newBufferedWriter(RES_FILE, CHARSET));
            writer.write(heuristic + " " + timeStamp + "\n\n");
            writer.write(resDescription);
            printResults(pathResults);
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            writer.close();
        }
    }

    private static void printResults(PathResult[] pathResults) {
        String separator = "##########################################\n\n";
        for (int i = 0; i < pathResults.length; i++) {
            String genrealInfo = "## Agent no: " + (i + 1) + "\n"
                    + "## Profit collected: " + String.format(Locale.US, "%.2f", pathResults[i].getActualProfit()) + "\n"
                    + "## Distance travelled: " + String.format(Locale.US, "%.2f", pathResults[i].getPathLength()) + "\n\n";
            String pathDescription = pathResults[i].getPathDescription();
            writer.write(separator);
            writer.write(genrealInfo);
            writer.write(pathDescription);
            writer.write(separator);
        }
    }
}
